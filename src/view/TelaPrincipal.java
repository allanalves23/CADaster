
package view;

import com.jgoodies.looks.plastic.PlasticLookAndFeel;
import com.jgoodies.looks.plastic.theme.AbstractSkyTheme;
import com.jgoodies.looks.plastic.theme.ExperienceRoyale;
import com.jgoodies.looks.plastic.theme.InvertedColorTheme;
import com.jgoodies.looks.plastic.theme.Silver;
import javax.swing.JOptionPane;
import utilitarios.UmaJanelaApenas;
import java.awt.Image;
import javax.swing.ImageIcon;
import java.awt.Graphics;
import java.awt.Toolkit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author allan
 */
public class TelaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form TelaPrincipal
     */
    //Flags dos jInternalFrames
    
    UmaJanelaApenas controle;
    
    /*Variavel do tipo UmaJanela
    para realizar a verificação da existencia de um mesmo frame
    aberto.
    */
    public TelaPrincipal() {
        initComponents();
        setIcon();
        this.setExtendedState(TelaPrincipal.MAXIMIZED_BOTH);
        this.setVisible(true);
        //Tela principal Maximizada
        TelaLogin login = new TelaLogin(this, true);
        login.setVisible(true);
        //Chamada da tela de login (JDialog)
        this.controle=new UmaJanelaApenas(fundo);
    }
    
   
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ImageIcon img = new ImageIcon(getClass().getResource("/imagens/fundo.jpg"));
        Image imagem = img.getImage();
        fundo = new javax.swing.JDesktopPane(){
            public void paintComponent(Graphics g){
                g.drawImage(imagem, 0, 0, getWidth(), getHeight(), this);
            }
        };
        barraMenu = new javax.swing.JMenuBar();
        sistema = new javax.swing.JMenu();
        gerenciaBD = new javax.swing.JMenuItem();
        temas = new javax.swing.JMenu();
        temaWindows = new javax.swing.JMenuItem();
        temaNimbus = new javax.swing.JMenuItem();
        temaMetal = new javax.swing.JMenuItem();
        experienceRoyale = new javax.swing.JMenuItem();
        silver = new javax.swing.JMenuItem();
        invertedColorTheme = new javax.swing.JMenuItem();
        abstractSky = new javax.swing.JMenuItem();
        logout = new javax.swing.JMenuItem();
        exit = new javax.swing.JMenuItem();
        usuarios = new javax.swing.JMenu();
        addUser = new javax.swing.JMenuItem();
        removeUser = new javax.swing.JMenuItem();
        editUser = new javax.swing.JMenuItem();
        searchUser = new javax.swing.JMenuItem();
        alunos = new javax.swing.JMenu();
        alunoAdd = new javax.swing.JMenuItem();
        alunoDel = new javax.swing.JMenuItem();
        alunoGeren = new javax.swing.JMenuItem();
        alunoPesq = new javax.swing.JMenuItem();
        funcionarios = new javax.swing.JMenu();
        funcProf = new javax.swing.JMenuItem();
        funcAdm = new javax.swing.JMenuItem();
        funcUtil = new javax.swing.JMenuItem();
        sobre = new javax.swing.JMenu();
        about = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CADaster - Gerenciamento Acadêmico [Build 0.2]");
        setIconImages(null);

        fundo.setBackground(new java.awt.Color(230, 230, 248));
        fundo.setForeground(new java.awt.Color(1, 1, 1));

        sistema.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Home.png"))); // NOI18N
        sistema.setText("Sistema");

        gerenciaBD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/bd.png"))); // NOI18N
        gerenciaBD.setText("Gerencia Banco de dados");
        gerenciaBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gerenciaBDActionPerformed(evt);
            }
        });
        sistema.add(gerenciaBD);

        temas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/tema.png"))); // NOI18N
        temas.setText("Temas");

        temaWindows.setText("Windows");
        temaWindows.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                temaWindowsActionPerformed(evt);
            }
        });
        temas.add(temaWindows);

        temaNimbus.setText("Nimbus");
        temaNimbus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                temaNimbusActionPerformed(evt);
            }
        });
        temas.add(temaNimbus);

        temaMetal.setText("Metal");
        temaMetal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                temaMetalActionPerformed(evt);
            }
        });
        temas.add(temaMetal);

        experienceRoyale.setText("Experience Royale");
        experienceRoyale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                experienceRoyaleActionPerformed(evt);
            }
        });
        temas.add(experienceRoyale);

        silver.setText("Silver");
        silver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                silverActionPerformed(evt);
            }
        });
        temas.add(silver);

        invertedColorTheme.setText("Cores Invertidas");
        invertedColorTheme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invertedColorThemeActionPerformed(evt);
            }
        });
        temas.add(invertedColorTheme);

        abstractSky.setText("Abstract Sky");
        abstractSky.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abstractSkyActionPerformed(evt);
            }
        });
        temas.add(abstractSky);

        sistema.add(temas);

        logout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Exit.png"))); // NOI18N
        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        sistema.add(logout);

        exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/quit.png"))); // NOI18N
        exit.setText("Sair");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        sistema.add(exit);

        barraMenu.add(sistema);

        usuarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Person.png"))); // NOI18N
        usuarios.setText("Usuarios");

        addUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Male.png"))); // NOI18N
        addUser.setText("Cadastrar");
        addUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserActionPerformed(evt);
            }
        });
        usuarios.add(addUser);

        removeUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Trash.png"))); // NOI18N
        removeUser.setText("Remover");
        removeUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeUserActionPerformed(evt);
            }
        });
        usuarios.add(removeUser);

        editUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Modify.png"))); // NOI18N
        editUser.setText("Editar");
        editUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUserActionPerformed(evt);
            }
        });
        usuarios.add(editUser);

        searchUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Find.png"))); // NOI18N
        searchUser.setText("Pesquisar");
        searchUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchUserActionPerformed(evt);
            }
        });
        usuarios.add(searchUser);

        barraMenu.add(usuarios);

        alunos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/People.png"))); // NOI18N
        alunos.setText("Alunos");

        alunoAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Female.png"))); // NOI18N
        alunoAdd.setText("Adicionar");
        alunoAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alunoAddActionPerformed(evt);
            }
        });
        alunos.add(alunoAdd);

        alunoDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Cancel.png"))); // NOI18N
        alunoDel.setText("Excluir");
        alunoDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alunoDelActionPerformed(evt);
            }
        });
        alunos.add(alunoDel);

        alunoGeren.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Notes.png"))); // NOI18N
        alunoGeren.setText("Gerenciar");
        alunoGeren.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alunoGerenActionPerformed(evt);
            }
        });
        alunos.add(alunoGeren);

        alunoPesq.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Text preview.png"))); // NOI18N
        alunoPesq.setText("Pesquisar");
        alunoPesq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alunoPesqActionPerformed(evt);
            }
        });
        alunos.add(alunoPesq);

        barraMenu.add(alunos);

        funcionarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Boss.png"))); // NOI18N
        funcionarios.setText("Funcionarios");

        funcProf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/teacher.png"))); // NOI18N
        funcProf.setText("Professor");
        funcProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                funcProfActionPerformed(evt);
            }
        });
        funcionarios.add(funcProf);

        funcAdm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/User group.png"))); // NOI18N
        funcAdm.setText("Administração");
        funcAdm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                funcAdmActionPerformed(evt);
            }
        });
        funcionarios.add(funcAdm);

        funcUtil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/funcionario.png"))); // NOI18N
        funcUtil.setText("Serviços Gerais");
        funcionarios.add(funcUtil);

        barraMenu.add(funcionarios);

        sobre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/About.png"))); // NOI18N
        sobre.setText("Sobre");

        about.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/About.png"))); // NOI18N
        about.setText("Sobre");
        about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutActionPerformed(evt);
            }
        });
        sobre.add(about);

        barraMenu.add(sobre);

        setJMenuBar(barraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fundo, javax.swing.GroupLayout.DEFAULT_SIZE, 754, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fundo, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    

//chamada do JDialog para o logout
    
    //muda o icone do programa
    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/imagens/LogoFrame.png")));
    }
    
    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        TelaLogin login = new TelaLogin(this, true); /*Chamada do objeto do tipo
        jDialog*/
        login.setVisible(true);
        
    }//GEN-LAST:event_logoutActionPerformed
    //Chamada da tela de adicao de usuario
    
    private void addUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserActionPerformed
        controle.abrirJanela(false,TelaCadastro.getAbrir());
        //dado boolean define se a janela vai abrir maximizada ou nao
    }//GEN-LAST:event_addUserActionPerformed
    //Chamada da tela de remocao de usuario
    
    private void removeUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeUserActionPerformed
        controle.abrirJanela(true,RemoveUser.getAbrir());
        //dado boolean define se a janela vai abrir maximizada ou nao
    }//GEN-LAST:event_removeUserActionPerformed
    //Chamada da tela de edicao de usuario
    
    private void editUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editUserActionPerformed
        controle.abrirJanela(false,EditUser.getAbrir());
        //dado boolean define se a janela vai abrir maximizada ou nao
    }//GEN-LAST:event_editUserActionPerformed
    //Chamada da tela de procura de usuario
    
    private void searchUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchUserActionPerformed
        controle.abrirJanela(true,TelaPesquisa.getAbrir());
        //dado boolean define se a janela vai abrir maximizada ou nao
    }//GEN-LAST:event_searchUserActionPerformed
    //Chamada da tela de sobre o programa
    
    private void aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutActionPerformed
        controle.abrirJanela(false,Sobre.getAbrir());
        //dado boolean define se a janela vai abrir maximizada ou nao
    }//GEN-LAST:event_aboutActionPerformed
    //Chamada da tela de adicionar aluno
    
    private void alunoAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alunoAddActionPerformed
        controle.abrirJanela(false,TelaAddAluno.getAbrir());
        //dado boolean define se a janela vai abrir maximizada ou nao
    }//GEN-LAST:event_alunoAddActionPerformed
    //Chamada da tela de remocao de aluno
    
    private void alunoDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alunoDelActionPerformed
       controle.abrirJanela(false,TelaDelAluno.getAbrir());
       //dado boolean define se a janela vai abrir maximizada ou nao
    }//GEN-LAST:event_alunoDelActionPerformed
    //Chamada da tela de pesquisar aluno

    private void alunoPesqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alunoPesqActionPerformed
        controle.abrirJanela(true,TelaPesqAluno.getAbrir());
        //dado boolean define se a janela vai abrir maximizada ou nao
    }//GEN-LAST:event_alunoPesqActionPerformed
    //Chamada da tela de gerencia de aluno

    private void alunoGerenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alunoGerenActionPerformed
        controle.abrirJanela(true,TelaGerenciaAluno.getAbrir());
        //dado boolean define se a janela vai abrir maximizada ou nao
    }//GEN-LAST:event_alunoGerenActionPerformed
    //Chamada do JOptionpane para confirmar a saida do programa

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
       int i = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja finalizar o programa?",
                "CADaster - Fechar",JOptionPane.YES_NO_OPTION);
        if(i==JOptionPane.YES_OPTION){
            dispose();
        }
        
    }//GEN-LAST:event_exitActionPerformed
    //Chamada da tela de gerenciamento de cadastro de professor

    private void funcProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_funcProfActionPerformed
        controle.abrirJanela(true,TelaProfessor.getAbrir());
        //dado boolean define se a janela vai abrir maximizada ou nao
    }//GEN-LAST:event_funcProfActionPerformed
    /*Chamada da tela de gerenciamento de casdastro de funcionarios
      administrativos*/
    private void funcAdmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_funcAdmActionPerformed
        controle.abrirJanela(true,TelaAdministracao.getAbrir());
         //dado boolean define se a janela vai abrir maximizada ou nao
    }//GEN-LAST:event_funcAdmActionPerformed

    private void gerenciaBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerenciaBDActionPerformed
        controle.abrirConfig(GerenciaBanco.getAbrir());
              
        
    }//GEN-LAST:event_gerenciaBDActionPerformed

    private void temaWindowsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_temaWindowsActionPerformed
         try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        SwingUtilities.updateComponentTreeUI(this);
    }//GEN-LAST:event_temaWindowsActionPerformed

    private void temaNimbusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_temaNimbusActionPerformed
         try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        SwingUtilities.updateComponentTreeUI(this);
    }//GEN-LAST:event_temaNimbusActionPerformed

    private void temaMetalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_temaMetalActionPerformed
         try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        SwingUtilities.updateComponentTreeUI(this);
        
    }//GEN-LAST:event_temaMetalActionPerformed

    private void experienceRoyaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_experienceRoyaleActionPerformed
         try {
            PlasticLookAndFeel.setPlasticTheme(new ExperienceRoyale());
                try {
                    UIManager.setLookAndFeel("com.jgoodies.looks.plastic.Plastic3DLookAndFeel");
                } catch (InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(this.getName()).log(Level.SEVERE, null, ex);
                }
           

                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(this, "Erro ao aplicar o tema - "+ex.getMessage(), "Erro",0);
                }
         SwingUtilities.updateComponentTreeUI(this);
    }//GEN-LAST:event_experienceRoyaleActionPerformed

    private void silverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_silverActionPerformed
        try {
            PlasticLookAndFeel.setPlasticTheme(new Silver());
                try {
                    UIManager.setLookAndFeel("com.jgoodies.looks.plastic.Plastic3DLookAndFeel");
                } catch (InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(this.getName()).log(Level.SEVERE, null, ex);
                }
           

                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(this, "Erro ao aplicar o tema - "+ex.getMessage(), "Erro",0);
                }
         SwingUtilities.updateComponentTreeUI(this);
    }//GEN-LAST:event_silverActionPerformed

    private void invertedColorThemeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invertedColorThemeActionPerformed
        try {
            PlasticLookAndFeel.setPlasticTheme(new InvertedColorTheme() {
            });
                try {
                    UIManager.setLookAndFeel("com.jgoodies.looks.plastic.Plastic3DLookAndFeel");
                } catch (InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(this.getName()).log(Level.SEVERE, null, ex);
                }
           

                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(this, "Erro ao aplicar o tema - "+ex.getMessage(), "Erro",0);
                }
         SwingUtilities.updateComponentTreeUI(this);
    }//GEN-LAST:event_invertedColorThemeActionPerformed

    private void abstractSkyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abstractSkyActionPerformed
        try {
            PlasticLookAndFeel.setPlasticTheme(new AbstractSkyTheme() {
});
                try {
                    UIManager.setLookAndFeel("com.jgoodies.looks.plastic.Plastic3DLookAndFeel");
                } catch (InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(this.getName()).log(Level.SEVERE, null, ex);
                }
           

                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(this, "Erro ao aplicar o tema - "+ex.getMessage(), "Erro",0);
                }
         SwingUtilities.updateComponentTreeUI(this);
    }//GEN-LAST:event_abstractSkyActionPerformed
 

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new TelaPrincipal().setVisible(true);
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem about;
    private javax.swing.JMenuItem abstractSky;
    private javax.swing.JMenuItem addUser;
    private javax.swing.JMenuItem alunoAdd;
    private javax.swing.JMenuItem alunoDel;
    private javax.swing.JMenuItem alunoGeren;
    private javax.swing.JMenuItem alunoPesq;
    private javax.swing.JMenu alunos;
    private javax.swing.JMenuBar barraMenu;
    private javax.swing.JMenuItem editUser;
    private javax.swing.JMenuItem exit;
    private javax.swing.JMenuItem experienceRoyale;
    private javax.swing.JMenuItem funcAdm;
    private javax.swing.JMenuItem funcProf;
    private javax.swing.JMenuItem funcUtil;
    private javax.swing.JMenu funcionarios;
    private javax.swing.JDesktopPane fundo;
    private javax.swing.JMenuItem gerenciaBD;
    private javax.swing.JMenuItem invertedColorTheme;
    private javax.swing.JMenuItem logout;
    private javax.swing.JMenuItem removeUser;
    private javax.swing.JMenuItem searchUser;
    private javax.swing.JMenuItem silver;
    private javax.swing.JMenu sistema;
    private javax.swing.JMenu sobre;
    private javax.swing.JMenuItem temaMetal;
    private javax.swing.JMenuItem temaNimbus;
    private javax.swing.JMenuItem temaWindows;
    private javax.swing.JMenu temas;
    private javax.swing.JMenu usuarios;
    // End of variables declaration//GEN-END:variables
}